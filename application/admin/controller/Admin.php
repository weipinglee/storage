<?php
// +----------------------------------------------------------------------
// | @date: 2018/5/28 - 17:00
// +----------------------------------------------------------------------
// | @author：weipinglee
// +----------------------------------------------------------------------
// | @desc：
// +----------------------------------------------------------------------
namespace app\admin\Controller;

use think\Request;
class Admin extends Base
{

    protected $serviceModel = null;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->serviceModel = \think\Loader::model('Admin','service');
        $this->view->engine->layout('layout/layout');
    }

    /**
     *
     * this is api
     * @api
     * @param int page 分页码
     * @return mixed
     */
    public function lst()
    {
        $model = $this->serviceModel;
        $page = isset($_GET['page']) ? $_GET['page'] : 1 ;
        $data = $model->lists('',$page);
        $this->assign(
            'data',$data['data']
        );
        $this->assign('pageData',$data['page']);

        // 设置页面中的信息
        $this->assign(array(
            '_page_btn_name' => '添加管理员',
            '_page_btn_link' => url('add'),
        ));
        return $this->fetch();
    }
    public function add()
    {
        $request = Request::instance();
        if($request->isPost()){
            $data = array(
                'adminname'=>$request->param('adminname'),
                'password'=>$request->param('password'),
                'role_id' => $request->param('role_id')
            );
            $res = $this->serviceModel->add($data);
            die(json_encode($res));
        }elseif($request->isGet()){
            return $this->fetch();
        }


    }

    public function edit()
    {
        $request = Request::instance();
        if($request->isPost()){
            $id = $request->param('id');
            $data = array(
                'password'=>$request->param('password'),
                'role_id' => $request->param('role_id')
            );
            $res = $this->serviceModel->edit($id,$data);
            die(json_encode($res));
        }elseif($request->isGet()){
            $id = $request->param('id');
            $data = $this->serviceModel->row($id);
            if($data['role_id']=='')
                $data['role_id']=0;
            $this->assign('data',$data);
            return $this->fetch();
        }

    }
    public function delete()
    {
        $request = Request::instance();
        $res = $this->serviceModel->del($request->param('id'));
        die(json_encode($res));
    }


}