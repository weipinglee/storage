<?php
/**
 * Created by PhpStorm.
 * User: weipinglee
 * Date: 2018/5/25
 * Time: 10:10
 */

namespace app\admin\Controller;
use think\Request;

class LoanCredit extends Base{

    protected $serviceModel = null;
    protected $model = null;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->serviceModel = \think\Loader::model('Loan','service');
        $this->model = \think\Loader::model('Loan','model');
        $this->view->engine->layout('layout/layout');
    }

    public function lst()
    {
        $request = Request::instance();
        $event  = \think\loader::controller('LoanCredit','event');
        $page = isset($_GET['page']) ? $_GET['page'] : 1 ;

        $where = array();
        $where['del'] = 0;
        $param = $request->param();


        if(isset($param['rec_person']) ){
            $where['rec_person'] = $param['rec_person'];
        }
        if(isset($param['status'])){
            switch($param['status']){
                case 'over' :
                    $where['status'] = '已结束';
                    break;
                case 'unover' :
                    $where['status'] = array('in','已保存,已提交');
            }
        }


        $data = $event->lst($where,$page,5);//print_r($data);
        $pageData = $event->pageBar();
        $userArr = array();
        foreach($data as $item){
           if(!in_array($item['owner'],$userArr)){
               $userArr[] = $item['owner'];
           }

        }

        //重新获取这部分user的信用卡信息,因为第一次获取的列表可能把同一user割裂开
        $where = array('owner'=>array('in',implode(',',$userArr)));
        $data = $event->lst($where,0);

        ///print_r($data);
        //将相同的user的信用卡记录放在同一个子数组
        $finalData = array();
        foreach($data as $item){
            $finalData[$item['owner']][] = $item;
        }
        //print_r($finalData);

        $this->assign(
            'data',$finalData
        );
        //print_r($data);
        $this->assign('pageData',$pageData);

        // 设置页面中的信息
        $this->assign(array(
            '_page_btn_name' => '添加借贷',
            '_page_btn_link' => url('add'),
        ));


        return $this->fetch();
    }

    public function personList(){
        $request = Request::instance();

        $name = $request->param('name');

        $personEvent = \think\Loader::controller('Person','event');
        $data = $personEvent->lst(1,100000000,array('name'=>$name));
        die(json_encode($data['data']));

    }
    public function add()
    {
        $request = Request::instance();
        if($request->isPost()){
            //print_r($request->param());
            $data = $request->param();
            if(isset($data['status'])){
                switch($data['status']){
                    case 0 : $data['status'] = '已保存';
                    break;
                    case 1 : $data['status'] = '已提交';
                    break;
                    case 2 : $data['status'] = '已结束';
                    break;
                }
            }
            $res = $this->serviceModel->add($data);
            die(json_encode($res));
        }elseif($request->isGet()){
            return $this->fetch();
        }


    }
    public function edit()
    {
        $request = Request::instance();
        if($request->isPost()){
            $id = $request->param('id');
            $data = $request->param();
            if(isset($data['status'])){
                switch($data['status']){
                    case 0 : $data['status'] = '已保存';
                        break;
                    case 1 : $data['status'] = '已提交';
                        break;
                    case 2 : $data['status'] = '已结束';
                        break;
                }
            }
            unset($data['id']);
            $res = $this->serviceModel->edit($id,$data);
            die(json_encode($res));
        }elseif($request->isGet()){
            $id = $request->param('id');
            $data = $this->serviceModel->row($id);
            $this->assign('data',$data);
            return $this->fetch();
        }

    }

    public function over()
    {


    }
    public function delete()
    {
        $request = Request::instance();
        $res = $this->serviceModel->del($request->param('id'));
        die(json_encode($res));
    }

    public function getExpIncome(){

    }

    /**
     * 获取最终收益
     */
    public function getFinalIncome(){

    }




}
